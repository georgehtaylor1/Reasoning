
BNF: 
tree: (&, (&, (&, A, (+, (-, A, ), B)), (-, C, )), (+, (-, B, ), C))

BNF: 
tree: (-, (&, (&, (&, A, (+, (-, A, ), B)), (-, C, )), (+, (-, B, ), C)), )
Attempting to resolve the formula: Original Formula: (-(((A&((-A)+B))&(-C))&((-B)+C)))
Clause Normal Form: [[A, -A, B, C], [-A, -B, B, C], [A, -A, C, -C], [-A, -B, C, -C]]
Attempting to resolve [-A, -B, B, C] & [A, -A, C, -C]
Found complimentary literal -A
Clauses resolved to [-A, -B, B, C, -C]
Attempting to resolve [-A, -B, B, C] & [-A, -B, C, -C]
Found complimentary literal B
Clauses resolved to [-A, -B, C, -C]
Attempting to resolve [-A, -B, B, C] & [A, -A, B, C]
Found complimentary literal -A
Clauses resolved to [-A, -B, B, C]
Attempting to resolve [A, -A, C, -C] & [-A, -B, C, -C]
Found complimentary literal A
Clauses resolved to [-A, -B, C, -C]
Attempting to resolve [A, -A, C, -C] & [A, -A, B, C]
Found complimentary literal A
Clauses resolved to [-A, A, B, C, -C]
Attempting to resolve [-A, -B, C, -C] & [A, -A, B, C]
Found complimentary literal -A
Clauses resolved to [-A, -B, B, C, -C]
Attempting to resolve [-A, -B, B, C] & [A, -A, C, -C]
Found complimentary literal -A
Clauses resolved to [-A, -B, B, C, -C]
Attempting to resolve [-A, -B, B, C] & [-A, -B, C, -C]
Found complimentary literal B
Clauses resolved to [-A, -B, C, -C]
Attempting to resolve [-A, -B, B, C] & [-A, A, B, C, -C]
Found complimentary literal -A
Clauses resolved to [-A, -B, B, C, -C]
Attempting to resolve [-A, -B, B, C] & [-A, -B, B, C, -C]
Found complimentary literal -B
Clauses resolved to [-A, B, -B, C, -C]
Attempting to resolve [-A, -B, B, C] & [A, -A, B, C]
Found complimentary literal -A
Clauses resolved to [-A, -B, B, C]
Attempting to resolve [A, -A, C, -C] & [-A, -B, C, -C]
Found complimentary literal A
Clauses resolved to [-A, -B, C, -C]
Attempting to resolve [A, -A, C, -C] & [-A, A, B, C, -C]
Found complimentary literal A
Clauses resolved to [-A, A, B, C, -C]
Attempting to resolve [A, -A, C, -C] & [-A, -B, B, C, -C]
Found complimentary literal A
Clauses resolved to [-A, -B, B, C, -C]
Attempting to resolve [A, -A, C, -C] & [A, -A, B, C]
Found complimentary literal A
Clauses resolved to [-A, A, B, C, -C]
Attempting to resolve [-A, -B, C, -C] & [-A, A, B, C, -C]
Found complimentary literal -A
Clauses resolved to [-A, -B, B, C, -C]
Attempting to resolve [-A, -B, C, -C] & [-A, -B, B, C, -C]
Found complimentary literal -B
Clauses resolved to [-A, -B, C, -C]
Attempting to resolve [-A, -B, C, -C] & [A, -A, B, C]
Found complimentary literal -A
Clauses resolved to [-A, -B, B, C, -C]
Attempting to resolve [-A, A, B, C, -C] & [-A, -B, B, C, -C]
Found complimentary literal A
Clauses resolved to [-A, B, -B, C, -C]
Attempting to resolve [-A, A, B, C, -C] & [A, -A, B, C]
Found complimentary literal -A
Clauses resolved to [A, -A, B, C, -C]
Attempting to resolve [-A, -B, B, C, -C] & [A, -A, B, C]
Found complimentary literal -A
Clauses resolved to [-A, -B, B, C, -C]
No more clauses resolved, negated formula satisfiable
#=================================================#
#                                                 #
# Proving: (((A&((-A)+B))&(-C))&((-B)+C))         #
#                                                 #
# Proof for: (-(((A&((-A)+B))&(-C))&((-B)+C)))    #
#                                                 #
# Line no. | Clauses    | Resolvant               #
# ---------+------------+----------------------   #
#        0 |    -,   -  | [-A, -B, B, C]          #
#        1 |    -,   -  | [A, -A, C, -C]          #
#        2 |    -,   -  | [-A, -B, C, -C]         #
#        3 |    -,   -  | [A, -A, B, C]           #
#        4 |    0,   1  | [-A, -B, B, C, -C]      #
#        5 |    1,   3  | [-A, A, B, C, -C]       #
#                                                 #
# This negated formula is satisfiable             #
# Therefore the original formula is invalid       #
#                                                 #
# Execution completed in:                         #
#                             6394235 nanoseconds #
#                                                 #
#=================================================#

Initialized model:
         A Free
         B Free
         C Free

Recursing on: Original Formula: (((A&((-A)+B))&(-C))&((-B)+C))
Clause Normal Form: [[A], [-A, B], [-C], [-B, C]]
Unit literal on: A
Recursing on: Original Formula: (((A&((-A)+B))&(-C))&((-B)+C))
Clause Normal Form: [[B], [-C], [-B, C]]
Unit literal on: B
Recursing on: Original Formula: (((A&((-A)+B))&(-C))&((-B)+C))
Clause Normal Form: [[-C], [C]]
Unit literal on: -C
Recursing on: Original Formula: (((A&((-A)+B))&(-C))&((-B)+C))
Clause Normal Form: [[]]
#===============================================#
#                                               #
# Proof for: (((A&((-A)+B))&(-C))&((-B)+C))     #
#                                               #
#                                               #
# This formula is unsatisfiable.                #
#                                               #
# Execution completed in:                       #
#                          70731549 nanoseconds #
#                                               #
#===============================================#
